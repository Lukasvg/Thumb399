-- Copyright (C) 2014 Digipen Institute of Technology
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.

-- Quartus II generated Memory Initialization File (.mif)

-- Louis: 100-199
-- Cody: 200-299
-- Cassandra: 300-399
-- Lee : 400-499
-- Johnny: 500-599
-- Tyler: 600-799

WIDTH=16;
DEPTH=1024;

ADDRESS_RADIX=HEX;
DATA_RADIX=BIN;

CONTENT BEGIN
	000  :   0010000000000010; -- MOV R0, 2
	001  :   0100011000000001; -- MOV R1, R0
	002  :   0100011010001001; -- MOV R9, R3
	003  :   0001000100001010; -- ASR R2, R1, #4
	004  :   0010000100000010; -- MOV R1, 2
	005  :   0010001000000100; -- MOV R2, R1
	006  :   0100000100001010; -- ASR R2, R1
	007  :   0000000100001010; -- LSL R2, R1, 4
	008  :   0010000100000100; -- MOV R1, 4
	009  :   0010001000000001; -- MOV R2, 1
	00A  :   0100000010001010; -- LSL R2, R1
	00B  :   0000100100001010; -- LSR R2, R1, 4 
	00C  :   0010000100000100; -- MOV R1, 4
	00D  :   0010001000010000; -- MOV R2, 16
	00E  :   0100000011001010; -- LSR R2, R1 
	00F  :   0010000100000100; -- MOV R1, 4
	010  :   0010001000010000; -- MOV R2, 16
	011  :   0100000111001010; -- ROR R2, R1 
	012  :   0010000000000000; -- MOV R0, 0
	013  :   0010000100000000; -- MOV R1, 0
	014  :   0001110001000001; -- ADD R1, R0, 1
	015  :   0001110101001010; -- ADD R2, R1, 5
	016  :   0001110111010011; -- ADD R3, R2, 7
	017  :   0010000100000000; -- MOV R1, 0 
	018  :   0100011010001000; -- MOV R8, R1
	019  :   0010010000000001; -- MOV R4, 1
	01A  :   0011000100001011; -- ADD R1, 11
	01B  :   0001100001010011; -- ADD R3, R2, R1
	01C  :   0100010010100000; -- ADD R8, R4
	01D  :   0010000100000000;
	01E  :   0100011010001101;
	01F  :   1010100100000010;
	020  :   1011000000000001;
	021  :   0010000100000000; -- Right Add
	022  :   1010000100000001; -- PC Add 
	023  :   0010000100011111;
	024  :   0010001000000001;
	025  :   0010001100000001;
	026  :   0100000010001010;
	027  :   0100000010001011;
	028  :   0001100011010011;
	029  :   0100000101010011;
	02A  :   0010000100011111;
	02B  :   0010001000011111;
	02C  :   0100000000001010;
	02D  :   0100001110001010;
	02E  :   0100000001001010;
	02F  :   0100001111001010;
	030  :   0010000100011111;
	031  :   0010001000111111;
	032  :   0100001100001010;
	033  :	 0010000100000100; -- Branch Sequence
	034  :   1110000000000110; -- Br
	037  :   0011000100000010; -- Add
	038  :   0010000010011100; -- MOV, 4E
	039  :   0100011100000000; -- BX
	04E  :   0011000100000010; -- ADD
	04F  :   0010000010101010; -- MOV r4 , 55
	050  : 	 0100011110000000; -- BLX
	055  :   0011000100000010; -- ADD
	056  :   1111000000000000;
	057  :   1111100001011001;
	--058  :   1110000001110000;-- Branch to Cody's Memory
	--0C8	 :	 0010000000000001; -- MOV R0, 1 Testing branch works
	--059  :   0011000100000010; -- ADD	

	-- Louis Start (064) ------------------------
	064  :   0010000000101010; -- MOV 42 into R0
	066  :   0010000100001010; -- MOV 10 into R1
	067  :   0110101110001000; -- LDR address 66 [R1 + 56] into R0
	068  :   0010000000101010; -- MOV 42 into R0
	069  :   0110010000001000; -- STR R0 into address 74 [R1 + 64]
	06A  :   0110101000000001; -- LDR address 74 into R1
	06B  :   0010001000000001; -- MOV 1 into R2
	06C  :   0010001101001000; -- MOV 72 into R3
	06D  :   0010010000011100; -- MOV 28 into R4
	06E  :   0101100011100010; -- LDR address 100 into R2 
	06F  :   0010001011001001; -- MOV 201 into R2
	070  :   0101000011100010; -- STR 201 into address 100
	071  :   0101100011100101; -- LDR address 100 into R5
	-- LDR/STR Test End -------------------
	
	---------------- Cassandra Begin --------------------
	12C  :	 0010000010000000; -- MOV R0, #128
	12D	 :	 0010000100010111; -- MOV R1, #23
	12E  :	 0100000010001000; -- LSL R0, R1
	12F  :   0000000001000000; -- LSL R0, R0, #1
	130  :   0000000001000000; -- LSL R0, R0, #1
	131  :   0010000010000000; -- MOV R0, #128
	132  :   0001000010000000; -- ASR R0, R0, #2
	133  :   0001000110000000; -- ASR R0, R0, #6
	134  :   0010000010000000; -- MOV R0, #128
	135  :   0010000100011000; -- MOV R1, #24
	136  :   0100000010001000; -- LSL R0, R1
	137  :   0010000100100000; -- MOV R1, #32
	138  :   0100000100001000; -- ASR R0, R1
	139  :   0010000000010000; -- MOV R0, #16
	13A  :   0000100011000000; -- LSR R0, R0, #3
	13B  :   0010000010000000; -- MOV R0, #128
	13C  :   0010000100011000; -- MOV R1, #24
	13D  :   0100000010001000; -- LSL R0, R1
	13E  :   0000100000000000; -- LSR R0, R0, #0
	13F  :   0010000100100000; -- MOV R1, #32
	140  :   0100000011001000; -- LSR R0, R1
	141  :   0010000001000000; -- MOV R0, #64
	142  :   0010000100000100; -- MOV R1, #4
	143  :   0100000111001000; -- ROR R0, R1
	144  :   0010000000000111; -- MOV R0, #7
	145  :   0010000100000010; -- MOV R1, #2
	146  :   0100000111001000; -- ROR R0, R1
	147  :   0010000000000000; -- MOV R0, #0
	148  :   0010000100000001; -- MOV R1, #1
	149  :   0100000111000000; -- ROR R0, R0 
	14A  :   0010000010000000; -- MOV R0, #128
	14B  :   0010000100011000; -- MOV R1, #24
	14C  :   0100000010001000; -- LSL R0, R1
	14D  :   0010000100100000; -- MOV R1, #32
	14E  :   0100000100001000; -- ASR R0, R1
	14F  :   0100011000000010; -- MOV R2, R0
	150  :   0011001000000001; -- ADD R2, #1
	151  :   0010000100000000; -- MOV R1, #0
	152  :   0100011000000011; -- MOV R3, R0
	153  :   0000100001011011; -- LSR R3, R3, #1
	154  :   0100000101001011; -- ADC R3, R1
	155  :   0010000100000001; -- MOV R1, #1
	156  :   0100011000000011; -- MOV R3, R0
	157  :   0100000101001011; -- ADC R3, R1
	158  :   0100011000000011; -- MOV R3, R0
	159  :   0010000100000000; -- MOV R1, #0
	15A  :   0011000100000000; -- ADD R1, #0
	15B  :   0100000101011011; -- ADC R3, R3
	15C  :   0010000000000000; -- MOV R0, #0
	15D  :   0010000100011000; -- MOV R1, #24
	15E  :   0010001010000000; -- MOV R2, #128
	15F  :   0100000010001010; -- LSL R2, R1
	160  :   0100000000001000; -- AND R0, R1
	161  :   0010000000000000; -- MOV R0, #0
	162  :   0010011000000000; -- MOV R6, #0
	163  :   0100000000001001; -- AND R1, R1
	164  :   0100000000110110; -- AND R6, R6
	165  :   0100000000010010; -- AND R2, R2
	166  :   0010000000000000; -- MOV R0, #0
	167  :   0010000100011000; -- MOV R1, #24
	168  :   0010001010000000; -- MOV R2, #128
	169  :   0100000010001010; -- LSL R2, R1
	16A  :   0100001110001001; -- BIC R1, R1
	16B  :   0100001110000010; -- BIC R2, R0
	16C  :   0010000000000000; -- MOV R0, #0
	16D  :   0010000100011000; -- MOV R1, #24
	16E  :   0010001010000000; -- MOV R2, #128
	16F  :   0100000010001010; -- LSL R2, R1
	170  :   0100000001000001; -- EOR R1, R0
	171  :   0010000000000000; -- MOV R0, #0
	172  :   0100000001001010; -- EOR R2, R1
	173  :   0100000001010010; -- EOR R2, R2
	174  :   0010000000000000; -- MOV R0, #0
	175  :   0100001111000000; -- MVN R0, R0
	176  :   0100001111000000; -- MVN R0, R0
	177  :   0010000000000000; -- MOV R0, #0
	178  :   0010000100011000; -- MOV R1, #24
	179  :   0010001010000000; -- MOV R2, #128
	17A  :   0100000010001010; -- LSL R2, R1
	17B  :   0100001100000000; -- ORR R0, R0
	17C  :   0100001100001010; -- ORR R2, R1
	----------- Cassandra End -------------------
	1F4  :   0011000100000010; -- Add
	1F5  :   0010000000000000; -- MOV R0, 0
	1F6  :   0010000100000000; -- MOV R1, 0
	1F7  :	 0100001011000001; -- CMN R0, R1
	1F8  :   0010100000000000; -- CMP R0, 0
	1F9  :   0100001010000001; -- CMP R0, R1
	1FA  :   0100010100000000; -- CMP R0, R1
	1FB  :   0100001000000001; -- TST R0, R1
	1FC  :   0001111001000000; -- SUB R0, R0, 1
	1FD  :   0100001011000001; -- CMN R0, R1
	1FE  :   0010100000000000; -- CMP R0, 0
	1FF  :	 0100001010000001; -- CMP R0, R1
	200  :   0100010100000000; -- CMP R0, R1
	201  :   0001111001001001; -- SUB R1, R1, 1
	202  :   0100001000000001; -- TST R0, R1
	203  :   0100001011000001; -- CMN R0, R1
	204  :   0010000000000000; -- MOV R0, 0
	205  :   0010000100000001; -- MOV R1, 1
	206  :   0010100000000001; -- CMP R0, 1
	207  :   0100001010000001; -- CMP R0, R1
	207  :   0100010100000000; -- CMP R0, R1
	-- Tyler Start ------------------------
	258	 :   1110000000100000; -- B 16
	262  :	 0011000000000001; -- ADD R0 0x1
	263	 :   1110000000100000; -- B 16
	268	 :	 0010000000001111; -- MOV R0 0x010F
	269	 :   1011001011000001; -- UXTB R0 R1  new value should be just 0x0F
	26A	 :	 0010000010000101; -- MOV R0 0x85
	26B  :   0001100000000000; -- ADD R0 R0 R0 value should be 0X010A
	26C  :   1011001010000001; -- UXTH R0 R1  walue should stay the same
	26D  :   0010000011110000; -- MOV R1 0xF0
	26E	 :   1011001001000001; -- SXTB R0 R1  new value should be 0xFFFFFFF0
	26F  :   0010000011110000; -- MOV R0 0XF0
	270  :   0000001000000000; -- LSL R0 8  new value 0xF000
	271  :   1011001000000001; -- SXTH R0 R1 new value should be 0xFFFFF000
	272  :   1110010000100000; -- B -16
	
	[273..3FF]  :   0000000000000000;
END;
